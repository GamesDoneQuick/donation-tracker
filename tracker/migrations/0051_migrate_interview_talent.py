# Generated by Django 5.1.4 on 2025-01-17 18:29

from django.db import migrations


def split_talent(apps, schema_editor):
    Interview = apps.get_model('tracker', 'Interview')
    Talent = apps.get_model('tracker', 'Talent')
    conflicts = set()
    for talent in Talent.objects.all():
        matching = Talent.objects.filter(name__iexact=talent.name)
        if Talent.objects.filter(name__iexact=talent.name).count() > 1:
            conflicts |= {*matching}
    assert len(conflicts) == 0, f'Conflicting talent names, please resolve before applying this migration: {",".join(m.name for m in matching)}'
    for interview in Interview.objects.all():
        interview.interviewers.add(*(
            Talent.objects.get_or_create(name__iexact=name.strip(), defaults={'name': name.strip()})[0]
            for name in interview.interviewers_text.split(',') if name.strip()))
        interview.subjects.add(*(
            Talent.objects.get_or_create(name__iexact=name.strip(), defaults={'name': name.strip()})[0]
            for name in interview.subjects_text.split(',') if name.strip()))


def unsplit_talent(apps, schema_editor):
    Interview = apps.get_model('tracker', 'Interview')
    for interview in Interview.objects.prefetch_related('interviewers', 'subjects'):
        interview.interviewers_text = ', '.join(t.name for t in interview.interviewers.all())
        interview.subjects_text = ', '.join(t.name for t in interview.subjects.all())


class Migration(migrations.Migration):

    dependencies = [
        ('tracker', '0050_rename_interview_columns'),
    ]

    operations = [
        migrations.RunPython(split_talent, unsplit_talent, elidable=True),
    ]
